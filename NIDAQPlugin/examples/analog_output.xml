<?xml version="1.0" standalone="no"?>
<monkeyml version="1.0">
    <io_devices tag="IO Devices">
        <iodevice type="nidaq" tag="nidaq" name="Dev1" update_interval="3ms" analog_input_data_interval="1ms" analog_output_data_interval="1ms" assume_multiplexed_adc="YES">
            <iochannel type="nidaq_analog_output_voltage" tag="ao0" channel_number="0" range_min="-10.0" range_max="10.0" voltage="output0"></iochannel>
            <iochannel type="nidaq_analog_output_voltage" tag="ao1" channel_number="1" range_min="-10.0" range_max="10.0" voltage="output1"></iochannel>
            <iochannel type="nidaq_analog_input_voltage" tag="ai0" channel_number="0" range_min="-10.0" range_max="10.0" voltage="input0"></iochannel>
            <iochannel type="nidaq_analog_input_voltage" tag="ai1" channel_number="1" range_min="-10.0" range_max="10.0" voltage="input1"></iochannel>
        </iodevice>
    </io_devices>
    <variables tag="Variables">
        <variable tag="output0" scope="global" logging="when_changed" default_value="0" type="integer"></variable>
        <variable tag="output1" scope="global" logging="when_changed" default_value="0" type="integer"></variable>
        <variable tag="input0" scope="global" logging="when_changed" default_value="0" type="integer"></variable>
        <variable tag="input1" scope="global" logging="when_changed" default_value="0" type="integer"></variable>
        <variable tag="done" scope="global" logging="when_changed" default_value="0" type="integer"></variable>
    </variables>
    <sounds tag="Sounds"></sounds>
    <stimuli tag="Stimuli">
        <stimulus type="frame_list" tag="frame_list" stimulus_group="frames" ending="" ended="" loop="YES" repeats="0" autoplay="YES"></stimulus>
        <stimulus_group tag="frames">
            <stimulus type="rectangle" tag="box" color="1,1,1" x_size="1" y_size="1" x_position="input0" y_position="input1" rotation="0" alpha_multiplier="1"></stimulus>
        </stimulus_group>
    </stimuli>
    <filters tag="Filters"></filters>
    <optimizers tag="Optimizers"></optimizers>
    <experiment tag="New Experiment" full_name="" description="">
        <protocol tag="New Protocol" nsamples="1" sampling_method="cycles" selection="sequential" interruptible="YES">
            <task_system tag="New Task System" interruptible="YES">
                <task_system_state tag="Begin State System" interruptible="YES">
                    <action_marker _unmoveable="1" tag="Actions"></action_marker>
                    <action type="assignment" tag="Reset output0" variable="output0" value="0"></action>
                    <action type="assignment" tag="Reset output1" variable="output1" value="0"></action>
                    <action type="assignment" tag="Reset done" variable="done" value="0"></action>
                    <action tag="Start IO Device" type="start_device_IO" device="nidaq"></action>
                    <action tag="Live Queue Stimulus" type="live_queue_stimulus" stimulus="frame_list"></action>
                    <action tag="Update Stimulus Display" type="update_stimulus_display"></action>
                    <transition_marker _unmoveable="1" tag="Transitions"></transition_marker>
                    <transition type="conditional" tag="If Condition is True, Transition to ..." condition="done" target="Exit State System"></transition>
                </task_system_state>
                <task_system_state tag="Exit State System" interruptible="YES">
                    <action_marker _unmoveable="1" tag="Actions"></action_marker>
                    <action tag="Dequeue Stimulus" type="dequeue_stimulus" stimulus="frame_list"></action>
                    <action tag="Update Stimulus Display" type="update_stimulus_display"></action>
                    <action tag="Stop IO Device" type="stop_device_IO" device="nidaq"></action>
                    <transition_marker _unmoveable="1" tag="Transitions"></transition_marker>
                    <transition tag="Return to parent task system" type="yield"></transition>
                </task_system_state>
            </task_system>
        </protocol>
    </experiment>
</monkeyml>