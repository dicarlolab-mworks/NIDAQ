---


name: NIDAQ Device
signature: iodevice/nidaq
isa: IODevice
platform: macos
description: >
    Interface to a `National Instruments <http://www.ni.com>`_ data acquisition
    (DAQ) device
parameters: 
  - 
    name: name
    required: yes
    example: Dev1
    description: |
        Device name.

        Run ``/Applications/National Instruments/NI-DAQmx Base/lsdaq.app`` to
        detect available devices and determine their assigned names.
  - 
    name: update_interval
    required: yes
    example: 3ms
    description: >
        MWorks will poll the device for new input data every ``update_interval``
        microseconds
  - 
    name: analog_input_data_interval
    required: yes
    example: 1ms
    description: >
        Interval between acquired samples on analog input channels
        (microseconds)
  - 
    name: analog_output_data_interval
    required: yes
    example: 1ms
    description: >
        Interval between generated samples on analog output channels
        (microseconds)
  - 
    name: assume_multiplexed_adc
    default: 'YES'
    description: >
        If ``YES``, MWorks assumes that all analog input channels share a single
        analog-to-digital converter (ADC) and adjusts sample timestamps
        accordingly.  If ``NO``, MWorks assumes that each analog input channel
        has its own ADC and that samples for all channels are acquired
        simultaneously.


---


name: NIDAQ Analog Input Voltage Channel
signature: iochannel/nidaq_analog_input_voltage
isa: IOChannel
platform: macos
allowed_parent: NIDAQ Device
description: Analog input voltage channel on a `NIDAQ Device`
parameters: 
  - 
    name: channel_number
    required: yes
    example: 0
    description: >
        Analog input channel number (``0`` for AI0, ``1`` for AI1, etc.)
  - 
    name: range_min
    required: yes
    example: -10.0
    description: Minimum expected input value (volts)
  - 
    name: range_max
    required: yes
    example: 10.0
    description: Maximum expected input value (volts)
  - 
    name: voltage
    required: yes
    description: Variable in which to store input voltage values


---


name: NIDAQ Analog Output Voltage Channel
signature: iochannel/nidaq_analog_output_voltage
isa: IOChannel
platform: macos
allowed_parent: NIDAQ Device
description: Analog output voltage channel on a `NIDAQ Device`
parameters: 
  - 
    name: channel_number
    required: yes
    example: 0
    description: >
        Analog output channel number (``0`` for AO0, ``1`` for AO1, etc.)
  - 
    name: range_min
    required: yes
    example: -10.0
    description: Minimum expected output value (volts)
  - 
    name: range_max
    required: yes
    example: 10.0
    description: Maximum expected output value (volts)
  - 
    name: voltage
    required: yes
    description: >
        Variable from which to read output voltage values.  `Assigning <Assign
        Variable>` a value to the variable causes the output voltage to be
        changed immediately.


---


name: NIDAQ Analog Output Voltage Waveform Channel
signature: iochannel/nidaq_analog_output_voltage_waveform
isa: IOChannel
platform: macos
allowed_parent: NIDAQ Device
description: >
    Generates a periodic analog output voltage signal on a `NIDAQ Device`
parameters: 
  - 
    name: channel_number
    required: yes
    example: 0
    description: >
        Analog output channel number (``0`` for AO0, ``1`` for AO1, etc.)
  - 
    name: range_min
    required: yes
    example: -10.0
    description: Waveform minimum (volts)
  - 
    name: range_max
    required: yes
    example: 10.0
    description: Waveform maximum (volts)
  - 
    name: waveform
    required: yes
    options: [sinusoid, square, triangle, sawtooth]
    description: Waveform type
  - 
    name: period
    required: yes
    example: 500ms
    description: Waveform period (microseconds)
  - 
    name: offset
    required: yes
    example: 0ms
    description: >
        Waveform time offset (microseconds).  Determines the initial phase of
        the waveform.


---


name: NIDAQ Digital Channel
abstract: yes
isa: IOChannel
platform: macos
allowed_parent: NIDAQ Device
parameters: 
  - 
    name: port_number
    required: yes
    example: 0
    description: Digital port number (``0`` for P0, ``1`` for P1, etc.)
  - 
    name: num_lines_in_port
    required: yes
    example: 8
    description: >
        Number of lines in the port.  Typical values are 4, 8, 16, and 32.
  - 
    name: line0
  - 
    name: line1
  - 
    name: line2
  - 
    name: line3
  - 
    name: line4
  - 
    name: line5
  - 
    name: line6
  - 
    name: line7
  - 
    name: line8
  - 
    name: line9
  - 
    name: line10
  - 
    name: line11
  - 
    name: line12
  - 
    name: line13
  - 
    name: line14
  - 
    name: line15
  - 
    name: line16
  - 
    name: line17
  - 
    name: line18
  - 
    name: line19
  - 
    name: line20
  - 
    name: line21
  - 
    name: line22
  - 
    name: line23
  - 
    name: line24
  - 
    name: line25
  - 
    name: line26
  - 
    name: line27
  - 
    name: line28
  - 
    name: line29
  - 
    name: line30
  - 
    name: line31


---


name: NIDAQ Digital Input Channel
signature: iochannel/nidaq_digital_input
isa: NIDAQ Digital Channel
description: |
    Digital input channel on a `NIDAQ Device`.

    Supports up to 32 lines on a single port.  Each line has an associated
    parameter (e.g. `line0`_) that specifies the variable in which to store the
    state of the line (0 or 1).


---


name: NIDAQ Digital Output Channel
signature: iochannel/nidaq_digital_output
isa: NIDAQ Digital Channel
description: |
    Digital output channel on a `NIDAQ Device`.

    Supports up to 32 lines on a single port.  Each line has an associated
    parameter (e.g. `line0`_) that specifies the variable from which to read the
    state of the line (0 or 1).  `Assigning <Assign Variable>` a value to the
    variable causes the line's state to be changed immediately.

    Also supports multi-bit word output via the `word`_ and `word_lines`_
    parameters.
parameters: 
  - 
    name: word
    description: >
        Variable from which to read multi-bit output words.  `Assigning <Assign
        Variable>` a value to the variable causes the state of the lines
        specified in `word_lines`_ to be changed immediately.
  - 
    name: word_lines
    example: ['1,2,3', '4:7', '1,4:6,7']
    description: |
        Lines used to output the individual bits of multi-bit words. The first
        line receives the least significant bit, the last line the most
        significant.

        Lines used for word output cannot also be controlled independently.
        Attempting to assign a value to the parameter associated with a line
        number included here will generate a warning.


---


name: NIDAQ Counter Input Count Edges Channel
signature: iochannel/nidaq_counter_input_count_edges
isa: IOChannel
platform: macos
allowed_parent: NIDAQ Device
description: >
    Counts falling edges detected on the specified counter input on a `NIDAQ
    Device`
parameters: 
  - 
    name: counter_number
    required: yes
    example: 0
    description: Counter number (``0`` for CTR0, ``1`` for CTR1, etc.)
  - 
    name: count
    required: yes
    description: Variable in which to store edge counts


